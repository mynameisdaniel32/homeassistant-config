- alias: Home Assistant Start
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: homeassistant.turn_on
    entity_id:
    - switch.flux
    - light.flux
  - service: homeassistant.turn_off
    entity_id:
    - input_boolean.homekit_control
  - service: input_select.select_option
    data:
      entity_id: input_select.tablet_panel_detail
      option: Lights
  - service: group.set_visibility
    entity_id:
    - group.tile_tablet_panel_lights_advanced
    - group.tile_tablet_panel_media
    - group.tile_tablet_panel_cameras
    - group.tile_tablet_panel_sprinklers
    - group.tile_tablet_panel_sprinklers_advanced
    - group.tile_tablet_panel_washer
    - group.tile_tablet_panel_dishwasher
    - group.tile_tablet_panel_alarm_clock
    - group.tile_tablet_panel_vacuum_cleaner
    - group.tile_tablet_panel_shed
    - group.tile_tablet_panel_weather
    - group.tile_tablet_panel_motion
    - group.tile_tablet_panel_rooms
    - group.tile_tablet_panel_rooms_bedroom
    - group.tile_tablet_panel_rooms_study
    data:
      visible: False

# Reset all input values if they've been forgotten by a database error/loss
- alias: Home Assistant Value Reset
  trigger:
    platform: homeassistant
    event: start
  condition:
  - condition: numeric_state
    entity_id: input_number.battery_alert_threshold_max
    below: '0'
  action:
  - service: persistent_notification.create
    data:
      title: Resetting Values
      message: Input values were lost, all have been reset.
#  - service: input_number.set_value
#    data:
#      entity_id: input_number.battery_alert_threshold_max
#      value: 30
  - service: input_number.set_value
    data:
      entity_id: input_number.alarmclock_hour
      value: 6
  - service: input_number.set_value
    data:
      entity_id: input_number.alarmclock_minutes
      value: 45
  - service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 100
  - service: input_number.set_value
    data:
      entity_id: input_number.sprinkler_temp
      value: 40
  - service: input_number.set_value
    data:
      entity_id: input_number.sprinkler_timer_1
      value: 0
  - service: input_number.set_value
    data:
      entity_id: input_number.sprinkler_timer_2
      value: 0
  - service: input_number.set_value
    data:
      entity_id: input_number.sprinkler_timer_3
      value: 0
  - service: input_number.set_value
    data:
      entity_id: input_number.sprinkler_timer_4
      value: 0


- alias: Homekit Start
  trigger:
  - platform: state
    entity_id: group.homekit_entities
  - platform: state
    entity_id: group.lights
  - platform: time_pattern
    minutes: '/1'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: >-
        {%- for entity_id in states.group.homekit_entities.attributes.entity_id if states(entity_id) == 'unknown' -%}
          {% if loop.first -%}
            {{false}}
          {%- endif -%}
        {%- endfor -%}
        {{true}}
    - condition: state
      entity_id: input_boolean.homekit_control
      state: 'off'
  action:
  - service: persistent_notification.create
    data:
      title: HomeKit Start
      message: HomeKit is now running.
  - service: homekit.start
  - service: homeassistant.turn_on
    entity_id:
    - input_boolean.homekit_control


- alias: Home Assistant Release Check
  trigger:
  - platform: state
    entity_id: sensor.home_assistant_release
  - platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: template
        value_template:  "{{ states('sensor.home_assistant_release') != states('sensor.current_version') }}"
      - condition: template
        value_template: "{% if not is_state('sensor.home_assistant_release', 'unavailable') %}true{% endif %}"
  action:
  - service: persistent_notification.create
    data:
      title: Home Assistant Release
      message: A new version of Home Assistant is available. Currently on {{ states('sensor.current_version') }}, the latest version is {{ states('sensor.home_assistant_release') }}.


#######################################################################################################
###--------------------------------------- BUTTON AUTOMATIONS --------------------------------------###
#######################################################################################################

- alias: Button - Door Bell
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.switch_door_bell
  action:
    - service: script.door_bell
    - service: notify.ios_daniel_iphone
      data:
        message: "Door Bell Pressed!"
        data:
          push:
            badge: 2
            category: "door_bell_alert"
#    - service: script.sprinkler_burst
#    - service: homeassistant.turn_on
#      entity_id: input_boolean.holiday_mode_christmas

- alias: Button - Roller Door
  trigger:
  - platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.switch_158d00016be070
  - platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.switch_158d0001b12757
  action:
    service: script.toggle_roller_door

- alias: Button - Carport Light
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.switch_158d0001e41a2c
      click_type: single
  action:
    service: homeassistant.toggle
    entity_id: light.carport

- alias: Button - Carport Light Hold
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.switch_158d0001e41a2c
      click_type: long_click_press
  action:
    - service: homeassistant.toggle
      entity_id: automation.motion_clear_carport

- alias: Motion Enable - Carport
  trigger:
    platform: state
    entity_id: light.carport
    to: 'off'
  action:
    - service: homeassistant.turn_on
      entity_id: automation.motion_clear_carport



- alias: Button - Bedroom
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.switch_158d0001e01080
  condition:
    condition: state
    entity_id: person.deanna
    state: 'not_home'
  action:
  - service: homeassistant.turn_off
    entity_id: group.lights
  - service: timer.cancel
    entity_id: timer.sleep_bedroom
  - service: timer.start
    entity_id: timer.sleep_bedroom
    data_template:
      duration: '00:20:00'

- alias: Button - Bedroom (Deanna)
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.switch_158d0001e01080
  condition:
    condition: state
    entity_id: person.deanna
    state: 'home'
  action:
  - service: homeassistant.turn_off
    entity_id:
      - group.lights
      - switch.heater_living_room_power
      - automation.lights_dynamic_brightness_0000
      - automation.lights_dynamic_brightness_0030
      - automation.lights_dynamic_brightness_0100
      - automation.lights_dynamic_brightness_0130
      - automation.lights_dynamic_brightness_0200
      - automation.lights_dynamic_brightness_2000
      - automation.lights_dynamic_brightness_2030
      - automation.lights_dynamic_brightness_2300
      - automation.lights_dynamic_brightness_2330

  - service: media_extractor.play_media
    entity_id: media_player.bedroom_chromecast
    data:
      media_content_id: "https://www.youtube.com/watch?v=XrDUTpeGW0A"
      media_content_type: video/youtube
  - service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 25



#######################################################################################################
###--------------------------------------- OTHER AUTOMATIONS ---------------------------------------###
#######################################################################################################
- alias: Turn off Stuff When I Leave Home
  trigger:
    platform: state
    entity_id: sensor.location_daniel
    from: 'Home'
    to: 'Away'
  action:
  - service: homeassistant.turn_off
    entity_id:
      - group.lights
    data:
      transition: 10
  - service: homeassistant.turn_off
    entity_id:
      - switch.triplej
      - switch.airplay_living_room
      - media_player.bedroom_tv
#      - media_player.living_room_tv
  - service: climate.set_operation_mode
    data:
      entity_id: climate.ac_bedroom
      operation_mode: "off"
  - service_template:  >
      {% if is_state('binary_sensor.living_room_tv_power_status', 'on') %}
        homeassistant.turn_off
      {% else %}
        script.dummy
      {% endif %}
    entity_id: media_player.living_room_tv

- alias: Set stuff when Deanna arrives
  trigger:
    platform: state
    entity_id: person.deanna
    to: 'home'
  action:
  - service: homeassistant.turn_off
    entity_id:
      - automation.motion_detect_bedroom
      - automation.motion_detect_living_room
      - automation.motion_detect_lounge
  - service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 75

- alias: Set stuff when Deanna leaves
  trigger:
    platform: state
    entity_id: person.deanna
    to: 'not_home'
    for:
      minutes: 60
  action:
  - service: homeassistant.turn_on
    entity_id:
      - automation.motion_detect_bedroom
      - automation.motion_detect_living_room
      - automation.motion_detect_lounge
      - automation.lights_dynamic_brightness_0000
      - automation.lights_dynamic_brightness_0030
      - automation.lights_dynamic_brightness_0100
      - automation.lights_dynamic_brightness_0130
      - automation.lights_dynamic_brightness_0200
      - automation.lights_dynamic_brightness_2000
      - automation.lights_dynamic_brightness_2030
      - automation.lights_dynamic_brightness_2300
      - automation.lights_dynamic_brightness_2330


- alias: Alarm Clock
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.alarmclock_time.state }}'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.alarmclock_status
        state: 'on'
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.alarmclock_workday
                state: 'on'
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: 'on'
          - condition: state
            entity_id: input_boolean.alarmclock_workday
            state: 'off'
  action:
  - service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 100
  - service: homeassistant.turn_on
    entity_id:
      - light.bedroom
    data:
      brightness: 255
      transition: 5
  - service: homeassistant.turn_off
    entity_id:
      - switch.airplay_shed
  - service: homeassistant.turn_on
    entity_id:
      - switch.airplay_living_room
      - switch.airplay_bedroom
      - switch.triplej

- alias: Turn off Bedroom TV with Chromecast
  trigger:
    platform: state
    entity_id:
    - media_player.bedroom_tv
    to: 'off'
    for:
      seconds: 8
  action:
    service: homeassistant.turn_off
    entity_id:
    - switch.bedroom_tv_power

- alias: Sleep Timer - Bedroom TV
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.sleep_bedroom
  condition:
    condition: template
    value_template: "{% if not is_state('media_player.bedroom_tv', 'off') %}true{% endif %}"
  action:
    service: media_player.turn_off
    entity_id:
    - media_player.bedroom


- alias: Nofify Sonarr Queue
  trigger:
  - platform: state
    entity_id: sensor.sonarr_queue
  condition:
    condition: numeric_state
    entity_id: sensor.sonarr_queue
    above: 2
  action:
    service: persistent_notification.create
    data:
      title: Sonarr Queue
      message: Sonarr Queue has exceeded 2

############ CHRISTMAS MODE ############

- alias: Holiday Mode Christmas On
  trigger:
    platform: sun
    event: sunset
#    offset: "00:30:00"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ now().strftime("%m-%d") >= "12-01" }}'
      - condition: template
        value_template: '{{ now().strftime("%m-%d") <= "12-26" }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.holiday_mode_christmas

- alias: Holiday Mode Christmas Off
  trigger:
    platform: time
    at: '02:00:00'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ now().strftime("%m-%d") >= "12-01" }}'
      - condition: template
        value_template: '{{ now().strftime("%m-%d") <= "12-27" }}'
  action: 
    service: homeassistant.turn_off
    entity_id: input_boolean.holiday_mode_christmas

    
    
    
#######################################################################################################
###----------------------------------------- AV AUTOMATIONS ----------------------------------------###
#######################################################################################################

#- alias: TV toggle state
#  trigger:
#    platform: state
#    entity_id:
#      - switch.living_room_tv
#    from: 'on'
#    to: 'off'
#  action:
#    service: homeassistant.state
#    entity_id:
#      - sensor.living_room_tv
#    data:
#      state: off
      
#- alias: TV toggle audio on when TV turns on
#  trigger:
#    platform: state
#    entity_id:
#      - media_player.living_room_tv
#    from: 'off'
#    to: 'on'
#  action:
#    service: homeassistant.turn_on
#    entity_id:
#      - switch.living_room_audio_source

#- alias: TV toggle audio off when TV turns off
#  trigger:
#    platform: state
#    entity_id:
#      - media_player.living_room_tv
#    from: 'on'
#    to: 'off'
#  action:
#    service: homeassistant.turn_off
#    entity_id:
#      - switch.living_room_audio_source

#- alias: TV toggle audio on when Apple TV starts playing
#  trigger:
#    platform: state
#    entity_id:
#    - media_player.apple_tv
#    to: 'playing'
#  action:
#    service: homeassistant.turn_on
#    entity_id:
#    - switch.living_room_audio_source

#- alias: Audio switch to 3.5mm when Triple J starts
#  trigger:
#    platform: state
#    entity_id: switch.triplej
#    from: 'off'
#    to: 'on'
#  action:
#    service: homeassistant.turn_off
#    entity_id: 
#    - switch.living_room_audio_source
##### TV
- alias: Living Room TV - Turn off motion detection when TV starts playing
  trigger:
    platform: state
    entity_id: media_player.living_room_apple_tv
    to: 'playing'
  action:
    - service: homeassistant.turn_off
      entity_id: 
        - automation.motion_detect_lounge
        - automation.motion_detect_living_room

- alias: Living Room TV - Turn on motion detection when TV stops playing
  trigger:
    platform: state
    entity_id: media_player.living_room_apple_tv
    from: 'playing'
  condition:
    condition: state
    entity_id: person.deanna
    state: 'not_home'
  action:
    - service: homeassistant.turn_on
      entity_id: 
        - automation.motion_detect_lounge
        - automation.motion_detect_living_room

### RADIO
- alias: Radio - Turn on when I get home during the day
  trigger:
    platform: state
    entity_id: sensor.location_daniel
    to: 'Home'
  condition:
    condition: time
    after: '8:00:00'
    before: '19:00:00'
  action:
    service: homeassistant.turn_on
    entity_id:
      - switch.triplej
      - switch.airplay_living_room


##### AUDIO
- alias: Audio switch to 3.5mm when Living Room AirPlay turns on
  trigger:
    platform: state
    entity_id: switch.airplay_living_room
    from: 'off'
    to: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id: 
        - switch.living_room_audio_source
    - service: input_number.set_value
      data:
        entity_id: input_number.forked_daapd_volume_living_room
        value: '100'

- alias: Audio Reset Shed AirPlay Volume to Max
  trigger:
    platform: state
    entity_id: switch.airplay_shed
    from: 'off'
    to: 'on'
  action:
    - service: input_number.set_value
      data:
        entity_id: input_number.forked_daapd_volume_shed
        value: '100'

- alias: Audio switch to optical when Living Room AirPlay turns off
  trigger:
    platform: state
    entity_id: switch.airplay_living_room
    from: 'on'
    to: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: 
    - switch.living_room_audio_source

- alias: Forked Daapd Set Volume Bedroom
  trigger:
    platform: state
    entity_id: input_number.forked_daapd_volume_bedroom
  action:
    - service: shell_command.forked_daapd_volume_bedroom
#    - service: homeassistant.update_entity
#      entity_id: sensor.forked_daapd_volume_bedroom

- alias: Forked Daapd Get Volume Bedroom
  trigger:
    platform: state
    entity_id: sensor.forked_daapd_volume_bedroom
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.forked_daapd_volume_bedroom
        value: '{{ states.sensor.forked_daapd_volume_bedroom.state }}'

- alias: Forked Daapd Set Volume Living Room
  trigger:
    platform: state
    entity_id: input_number.forked_daapd_volume_living_room
  action:
    - service: shell_command.forked_daapd_volume_living_room

- alias: Forked Daapd Get Volume Living Room
  trigger:
    platform: state
    entity_id: sensor.forked_daapd_volume_living_room
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.forked_daapd_volume_living_room
        value: '{{ states.sensor.forked_daapd_volume_living_room.state }}'
    - service: input_number.set_value
      data:
        entity_id: input_number.forked_daapd_volume_living_room
        value: '100'

- alias: Forked Daapd Set Volume Shed
  trigger:
    platform: state
    entity_id: input_number.forked_daapd_volume_shed
  action:
    - service: shell_command.forked_daapd_volume_shed

- alias: Forked Daapd Get Volume Shed
  trigger:
    platform: state
    entity_id: sensor.forked_daapd_volume_shed
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.forked_daapd_volume_shed
        value: '{{ states.sensor.forked_daapd_volume_shed.state }}'

- alias: Shed Door Turn on Shed AirPlay
  trigger:
    platform: state
    entity_id:
      - binary_sensor.door_window_shed_door
    from: 'off'
    to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id:
      - switch.airplay_shed

- alias: Shed Door Turn off Shed AirPlay
  trigger:
    platform: state
    entity_id:
      - binary_sensor.door_window_shed_door
    from: 'on'
    to: 'off'
  action:
    service: homeassistant.turn_off
    entity_id:
      - switch.airplay_shed



#######################################################################################################
###--------------------------------------- COVER AUTOMATIONS ---------------------------------------###
#######################################################################################################

- alias: iOS Roller Door Close
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: ROLLER_DOOR_CLOSE
  action:
    service: cover.close_cover
    entity_id:
      - cover.roller_door

- alias: iOS Roller Door Open
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: ROLLER_DOOR_OPEN
  action:
    service: cover.open_cover
    entity_id:
      - cover.roller_door

- alias: Notify if roller door opens while I'm away
  trigger:
    platform: state
    entity_id: cover.roller_door
    from: 'closed'
    to: 'open'
  condition:
    condition: state
    entity_id: sensor.location_daniel
    state: 'Away'
  action:
    service: notify.ios_daniel_iphone
    data:
      title: "Roller Door"
      message: "Opened!"
      data:
        attachment:
          content-type: jpeg
        push:
          badge: 5
          thread-id: "roller-door"
          category: camera
        entity_id: camera.carport


- alias: Notify if roller door is open when I leave home
  trigger:
    platform: state
    entity_id: sensor.location_daniel
    from: 'Home'
    to: 'Away'
  condition:
    condition: state
    entity_id: cover.roller_door
    state: 'open'
  action:
    service: notify.ios_daniel_iphone
    data:
      title: "Roller Door"
      message: "Left Open!"
      data:
        push:
          badge: 5
          thread-id: "roller-door"
          category: "roller_door_alert"

- alias: Notify if roller door is left open
  trigger:
    - platform: state
      entity_id: cover.roller_door
      to: 'open'
      for:
        minutes: 1
    - platform: state
      entity_id: cover.roller_door
      to: 'open'
      for:
        minutes: 15
    - platform: state
      entity_id: cover.roller_door
      to: 'open'
      for:
        hours: 1
    - platform: state
      entity_id: cover.roller_door
      to: 'open'
      for:
        hours: 2
    - platform: state
      entity_id: cover.roller_door
      to: 'open'
      for:
        hours: 3
    - platform: state
      entity_id: cover.roller_door
      to: 'open'
      for:
        hours: 4
    - platform: state
      entity_id: cover.roller_door
      to: 'open'
      for:
        hours: 5
    - platform: state
      entity_id: cover.roller_door
      to: 'open'
      for:
        hours: 6
  action:
    service: notify.ios_daniel_iphone
    data_template:
      title: "Roller Door"
      message: "Left open for {{ relative_time(states.cover.roller_door.last_updated) }}!"
      data:
        push:
          badge: 1
          thread-id: "roller-door"
          category: "roller_door_alert"

- alias: Notify prompt to open roller door when I arrive home
  trigger:
    platform: state
    entity_id: sensor.location_daniel
    to: 'Home'
  condition:
    condition: state
    entity_id: cover.roller_door
    state: 'closed'
  action:
    service: notify.ios_daniel_iphone
    data:
      title: "Roller Door"
      message: "Open?"
      data:
        push:
          thread-id: "roller-door"
          category: "roller_door_prompt"
