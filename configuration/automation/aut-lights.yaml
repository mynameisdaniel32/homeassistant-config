#######################################################################################################
###--------------------------------------- LIGHT AUTOMATIONS ---------------------------------------###
#######################################################################################################

# LIGHT CHECK #########################################################################################
- alias: Light Check Sunset
  trigger:
    platform: sun
    event: sunset
    offset: "-00:30:00"
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.light_check

- alias: Light Check Sunrise
  trigger:
    platform: sun
    event: sunrise
  action: 
    service: homeassistant.turn_off
    entity_id: input_boolean.light_check
    
- alias: Light Check Startup
  trigger: 
    platform: homeassistant
    event: start
  condition:
    condition: or
    conditions:
    - condition: sun
      after: sunset
      after_offset: "-00:30:00"
    - condition: sun
      before: sunrise
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.light_check


# LIGHT CONTROL #######################################################################################

- alias: Lights - Sunset
  trigger:
    platform: sun
    event: sunset
    offset: "-00:30:00"
  condition:
    condition: state
    entity_id: sensor.location_daniel
    state: 'Home'
  action:
    service: homeassistant.turn_on
    entity_id: light.living_room
    data:
      transition: 90

- alias: Lights - Study Sunset
  trigger:
    platform: state
    entity_id: input_boolean.light_check
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: binary_sensor.motion_study
    state: 'on'
  action:
  - service: homeassistant.turn_on
    entity_id: light.study
    data:
      transition: 90

- alias: Lights - Turn off Welcome Lights
  trigger:
    platform: state
    entity_id: group.welcome_control_lights
    from: 'off'
    to: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: group.welcome_lights
    data:
      transition: 5

- alias: Lights - Roller Door Opening
  trigger:
    platform: state
    entity_id: cover.roller_door
    from: 'closed'
    to: 'open'
  condition:
    condition: state
    entity_id: input_boolean.light_check
    state: 'on'
  action:
  - service: homeassistant.turn_on
    entity_id: group.welcome_lights
    data:
      transition: 5


# LIGHT BRIGHTNESS #######################################################################################
- alias: Lights Dynamic Brightness Reset
  trigger:
    platform: sun
    event: sunrise
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 100
 

- alias: Lights Dynamic Brightness 20:00
  trigger:
    platform: time
    at: '22:00:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 75

- alias: Lights Dynamic Brightness 20:30
  trigger:
    platform: time
    at: '22:30:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 62

- alias: Lights Dynamic Brightness 23:00
  trigger:
    platform: time
    at: '23:00:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 50

- alias: Lights Dynamic Brightness 23:30
  trigger:
    platform: time
    at: '23:30:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 40

- alias: Lights Dynamic Brightness 00:00
  trigger:
    platform: time
    at: '00:00:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 30

- alias: Lights Dynamic Brightness 00:30
  trigger:
    platform: time
    at: '00:30:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 25

- alias: Lights Dynamic Brightness 01:00
  trigger:
    platform: time
    at: '01:00:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 20

- alias: Lights Dynamic Brightness 01:30
  trigger:
    platform: time
    at: '01:30:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 15

- alias: Lights Dynamic Brightness 02:00
  trigger:
    platform: time
    at: '02:00:00'
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.dynamic_light_brightness
      value: 10

# LIFX SET BRIGHTNESS #######################################################################################
- alias: Lights Set LIFX Brightness
  trigger:
  - platform: state
    entity_id: input_number.dynamic_light_brightness
  action:
    service: light.lifx_set_state
    data:
      transition: 30
    data_template:
      brightness_pct: '{{states.input_number.dynamic_light_brightness.state | int}}'

# LIFX SET COLOUR TEMP #######################################################################################
- alias: Lights Set LIFX Colour Temp
  trigger:
    - platform: state
      entity_id: input_number.light_temp
    - platform: state
      entity_id: light.flux
      to: 'on'
  action:
#  - service: light.turn_on
#    data:
#      entity_id: light.flux
#      rgb_color: [255,255,255]
  - service: light.lifx_set_state
    data:
      transition: 15
    data_template:
      kelvin: '{{  states.input_number.light_temp.state | int}}'


# LIGHT COLOUR TEMP #######################################################################################
- alias: Lights Set Light Colour Temp
  trigger:
    - platform: state
      entity_id: sensor.light_flux_color_temp
  action:
    service: input_number.set_value
    data:
      entity_id: input_number.light_temp
    data_template:
#      value: '{{ ( 1000000 / states.light.flux.attributes.color_temp ) | int}}'
      value: '{{ states.sensor.light_flux_color_temp.state | int }}'


# LIGHT RGB COLOUR #######################################################################################
- alias: Lights Set LIFX RGB Colour
  trigger:
    platform: state
    entity_id: light.flux
  condition:
    condition: template
    value_template: "{{ states.light.flux.attributes.rgb_color != '(255,255,255)' }}"
  action:
    service: light.lifx_set_state
    data:
      transition: 5
    data_template:
      rgb_color:
      - '{{ states.light.flux.attributes.rgb_color[0] }}'
      - '{{ states.light.flux.attributes.rgb_color[1] }}'
      - '{{ states.light.flux.attributes.rgb_color[2] }}'


# CHRISTMAS LIGHTS ######################################################################################
- alias: Lights - Christmas 1
  trigger:
    platform: time_pattern
    seconds: '/2'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode_christmas
    state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.front_east
      data:
        transition: 1
      data_template: 
        color_name: >-
          {{ [
            "red",
            "green",
            "gold"
          ] | random }}

- alias: Lights - Christmas 2
  trigger:
    platform: time_pattern
    seconds: '/3'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode_christmas
    state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.front_west
      data:
        transition: 1
      data_template: 
        color_name: >-
          {{ [
            "red",
            "green",
            "gold"
          ] | random }}

- alias: Lights - Christmas Off
  trigger:
    platform: state
    entity_id: input_boolean.holiday_mode_christmas
    to: 'off'
  action:
    - service: light.turn_off
      entity_id:
        - light.front_west
        - light.front_easst
      data:
        transition: 5
