######################################################################################################
###---------------------------------------------- AV ----------------------------------------------###
######################################################################################################
living_room_tv_on:
  alias: Living Room TV On
  sequence:
    - service: homeassistant.turn_on
      data:
        entity_id:
          - switch.living_room_tv_power
#          - switch.living_room_audio_source

living_room_tv_off:
  alias: Living Room TV Off
  sequence:
    - service: homeassistant.turn_off
      data:
        entity_id:
          - switch.living_room_tv_power
#          - switch.living_room_audio_source           

living_room_volume_up:
  alias: Living Room Volume Up
  sequence:
    - service: homeassistant.turn_on
      data:
        entity_id:
          - switch.living_room_audio_volume

living_room_volume_down:
  alias: Living Room Volume Down
  sequence:
    - service: homeassistant.turn_off
      data:
        entity_id:
          - switch.living_room_audio_volume



######################################################################################################
###------------------------------------------ IRRIGATION ------------------------------------------###
######################################################################################################

sprinklers:
  alias: Sprinklers
  sequence:
    - service: homeassistant.turn_on
      data:
        entity_id:
        - switch.sprinkler_timer_1
        - switch.sprinkler_timer_2
        - switch.sprinkler_timer_3
    - delay: '00:{{[(states.input_number.sprinkler_timer_1.state | int), (states.input_number.sprinkler_timer_2.state | int), (states.input_number.sprinkler_timer_3.state | int)]|max}}:00'
    - service: homeassistant.turn_on
      data:
        entity_id:
        - switch.sprinkler_timer_4
    - delay: '00:{{(states.input_number.sprinkler_timer_4.state | int)}}:00'
    - service: homeassistant.turn_off
      data:
        entity_id:
        - group.irrigation
        - input_boolean.sprinkler_control

    # - service: timer.start
      # entity_id: timer.sprinkler_zone_4
      # data_template:
        # duration: '00:{{states.input_number.sprinkler_timer_4.state | int}}:00'
    # - service: homeassistant.turn_off
      # data:
        # entity_id:
        # - switch.sprinkler_zone_1
        # - switch.sprinkler_zone_2
        # - switch.sprinkler_zone_3
    # - service: homeassistant.turn_on
      # data:
        # entity_id:
        # - switch.sprinkler_zone_4
    # - delay: '00:{{states.input_number.sprinkler_timer_4.state | int}}:00'
    # - service: homeassistant.turn_off
      # data:
        # entity_id:
        # - group.irrigation
        # - input_boolean.sprinkler_control

sprinkler_burst:
  alias: Sprinkler Burst
  sequence:
    - service: homeassistant.turn_on
      data:
        entity_id:
        - switch.sprinkler_zone_4
    - delay: '00:00:02'
    - service: homeassistant.turn_off
      data:
        entity_id:
        - switch.sprinkler_zone_4

######################################################################################################
###-------------------------------------------- OTHER ---------------------------------------------###
######################################################################################################


toggle_roller_door:
  sequence:
    - service_template: >
        {% if is_state('cover.roller_door', 'open') %}
          cover.close_cover
        {% else %}
          cover.open_cover
        {% endif %}
      entity_id: cover.roller_door

door_bell:
  sequence:
    - service_template: >
        {% if is_state('sensor.location_daniel', 'Home') %}
          xiaomi_aqara.play_ringtone
        {% endif %}
      data:
        gw_mac: 34ce00fa664a
        ringtone_id: 10
        ringtone_vol: 100


#https://community.home-assistant.io/t/using-slider-for-blackout-window-blinds/74977/5
#set_blind_position:
#  sequence:
#    - service: cover.close_cover
#      data_template:
#        entity_id: "{{ entity_id }}"
#    - delay: 55
#    - service: cover.open_cover
#      data_template:
#        entity_id: "{{ entity_id }}"
#    - delay: "{{ (position | float / 100 * 55) | round }}"
#    - service: cover.stop_cover
#      data_template:
#        entity_id: "{{ entity_id }}"
#

#set_blind_bedroom_position:
#  sequence:
#    - service_template: >
#        {% if position | float == 0 %}
#          cover.close_cover
#        {% elif position | float == 100 %}
#          cover.open_cover
#        {% elif position == states('input_number.blind_bedroom_position') | float %}
#          script.dummy
#        {% elif position > states('input_number.blind_bedroom_position') | float %}
#          cover.open_cover
#        {% elif position < states('input_number.blind_bedroom_position') | float %}
#          cover.close_cover
#        {% endif %}
#      entity_id: cover.blind_bedroom
##      data_template:
##        entity_id: "{{ entity_id }}"
#
#      
#    - delay: >
#        {% if position == 0 %}
#          {{ states('input_number.blind_bedroom_position') | float / 100 * 45 | round }}
#        {% elif position == 100 %}
#          {{ ( 100 - states('input_number.blind_bedroom_position') | float ) / 100 * 45 | round }}
#        {% elif position >= states('input_number.blind_bedroom_position') | float %}
#          {{ ( position - states('input_number.blind_bedroom_position') | float ) / 100 * 45 | round }}
#        {% elif position <= states('input_number.blind_bedroom_position') | float %}
#          {{ ( states('input_number.blind_bedroom_position') | float - position ) / 100 * 45 | round }}
#        {% endif %}
#        
#    - service_template: >
#        {% if position == 0 %}
#          cover.close_cover
#        {% elif position == 100 %}
#          cover.open_cover
#        {% elif position > states('input_number.blind_bedroom_position') | float %}
#          cover.stop_cover
#        {% elif position < states('input_number.blind_bedroom_position') | float %}
#          cover.stop_cover
#        {% endif %}
#      entity_id: cover.blind_bedroom
##      data_template:
##        entity_id: "{{ entity_id }}"
#        
#    - service: input_number.set_value
#      data_template:
#        entity_id: input_number.blind_bedroom_position
#        value: "{{ position | float }}"


set_cover_position:
  sequence:
      
    - service_template: >
        {% if position_set | float  == 0 %}
          cover.close_cover
        {% elif position_set | float == 100 %}
          cover.open_cover
        {% elif position_set | float == states(position_previous) | float %}
          script.dummy
        {% elif position_set | float > states(position_previous) | float %}
          cover.open_cover
        {% elif position_set | float < states(position_previous) | float %}
          cover.close_cover
        {% endif %}
      data_template:
        entity_id: "{{ entity_id }}"
      
    - delay:
        seconds: >
          {% if position_set | float == 0 %}
            {{ ( states(position_previous) | float / 100 * closing_time | round ) | int }}
          {% elif position_set | float == 100 %}
            {{ ( ( 100 - states(position_previous) | float ) / 100 * opening_time | round ) | int }}
          {% elif position_set | float > states(position_previous) | float %}
            {{ (( position_set | float - states(position_previous) | float ) / 100 * opening_time | round ) | int }}
          {% elif position_set | float < states(position_previous) | float %}
            {{ (( states(position_previous) | float - position_set | float ) / 100 * closing_time | round ) | int }}
          {% endif %}
        
    - service_template: >
        {% if position_set | float == 0 %}
          cover.close_cover
        {% elif position_set | float == 100 %}
          cover.open_cover
        {% elif position_set | float > states(position_previous) | float %}
          cover.stop_cover
        {% elif position_set | float < states(position_previous) | float %}
          cover.stop_cover
        {% endif %}
      data_template:
        entity_id: "{{ entity_id }}"
        
    - service: input_number.set_value
      data_template:
        entity_id: "{{ position_previous }}"
        value: "{{ position_set }}"
      